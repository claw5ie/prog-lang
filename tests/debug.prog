// Comment
main: proc() void
{
  {
    #print 1 || false;
    #print 42 == false;
    #print false != 42;
    // #print false - true; // TODO: fix this
    #print +false;
    #print -true;

    #print 6 + 9 / 6 * 2 - 1 % 1;
    #print 2+2*2;
    #print 2*2+2;
    #print (2+2)*2;
    #print 2*(2+2);
    #print !false || true && false;
    #print -2 + +2;
    #print 42 < 69;
    #print 42 <= 69;
    #print 42 > 69;
    #print 42 >= 69;
    #print 2 + 2 == 4;
    #print 4 != 4;

    #print #cast(i42, 69,);
    #print #cast(bool, 42);
    #print bool(false);
    #print i42(69);
    #print i16(-1);

    #print #byte_size_of(2);
    #print #as(u64, 1);
    // #print #type_of(#as(u64, 1));
    // #print #type_of(1);
    // #print #type_of(#as(i64, 1));
  }

  #print 42069;
  #print 42069;
  #print 42069;
  #print 42069;

  i: u32 = 0;
  while i < 10 do
    {
      #print i;
      i = i + 1;
    }

  foo(69420);
  #print bar(if true 621 else 0);
  #print bar(if false 0 else 42);

  {
    #const a := 42;
    #print a;

    #static b := 69;
    b = 42;
    #print b;
  }

  {
    a: Foo.Bar = Foo.Bar(x = Foo(x = 420));
    #print a.x.x;

    alias Foo: struct
    {
      x: i32,

      alias Bar: struct
      {
        x: Foo,
      };

      foo: proc() void
      {
        #print 42069420;
      }
    };

    Foo.foo();
  }
}

foo: proc(x: u32) void
{
  #print x;
}

bar: proc(x: u32) i32
{
  return #cast(i32, x + 42);
}
